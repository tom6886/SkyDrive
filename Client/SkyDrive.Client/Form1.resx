<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_upload.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>